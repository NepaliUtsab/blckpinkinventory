name: Development Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  JAVA_VERSION: '17'
  JAVA_DISTRIBUTION: 'temurin'

jobs:
  # Disabled tests as requested
  # test:
  #   name: Run Tests
  #   runs-on: ubuntu-latest
  #   
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #     
  #   - name: Set up JDK ${{ env.JAVA_VERSION }}
  #     uses: actions/setup-java@v4
  #     with:
  #       java-version: ${{ env.JAVA_VERSION }}
  #       distribution: ${{ env.JAVA_DISTRIBUTION }}
  #       
  #   - name: Cache Gradle packages
  #     uses: actions/cache@v4
  #     with:
  #       path: |
  #         ~/.gradle/caches
  #         ~/.gradle/wrapper
  #       key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
  #       restore-keys: |
  #         ${{ runner.os }}-gradle-
  #         
  #   - name: Grant execute permission for gradlew
  #     run: chmod +x gradlew
  #     
  #   - name: Run tests
  #     run: ./gradlew test
  #     
  #   - name: Upload test results
  #     uses: actions/upload-artifact@v4
  #     if: always()
  #     with:
  #       name: test-results
  #       path: build/test-results/
        
  build-windows-dev:
    name: Build Windows Installer (Development)
    runs-on: windows-latest
    # needs: test  # Disabled since tests are commented out
    if: github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: ${{ env.JAVA_DISTRIBUTION }}
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Build application
      run: ./gradlew build -x test
      
    - name: Package MSI
      run: ./gradlew packageMsi -x test
      
    - name: Create distributable
      run: ./gradlew createDistributable -x test
      
    - name: Install NSIS
      run: |
        choco install nsis -y
        
    - name: Build NSIS installer
      run: |
        # Create dist directory
        New-Item -ItemType Directory -Force -Path "dist"
        
        # Build NSIS installer
        makensis windows-installer.nsi
      shell: powershell
      
    - name: Upload Windows installers (Development)
      uses: actions/upload-artifact@v4
      with:
        name: windows-installers-dev-${{ github.sha }}
        path: |
          build/compose/binaries/main/msi/*.msi
          dist/*.exe
        retention-days: 7
